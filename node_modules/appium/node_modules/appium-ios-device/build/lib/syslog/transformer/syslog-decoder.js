"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SyslogDecoder = void 0;

require("source-map-support/register");

var _stream = _interopRequireDefault(require("stream"));

const NEW_LINE_CODE = 0x0A;
const NULL_DELIMETER_CODE = 0x00;

class SyslogDecoder extends _stream.default.Transform {
  constructor(bufferLength) {
    super({
      objectMode: true
    });
    this.bufferIndex = 0;
    this.buffer = Buffer.allocUnsafe(bufferLength);
  }

  _transform(data, encoding, onData) {
    this._decode(data);

    onData();
  }

  _decode(data) {
    for (let i = 0; i < data.length; i++) {
      if (data[i] === NULL_DELIMETER_CODE) {
        continue;
      }

      if (data[i] === NEW_LINE_CODE) {
        if (this.bufferIndex !== 0) {
          const stringBuffer = Buffer.allocUnsafe(this.bufferIndex);
          this.buffer.copy(stringBuffer, 0, 0, this.bufferIndex);
          this.push(stringBuffer.toString('utf8'), 'utf8');
          this.bufferIndex = 0;
        }

        continue;
      }

      this.buffer[this.bufferIndex] = data[i];
      this.bufferIndex++;
    }
  }

}

exports.SyslogDecoder = SyslogDecoder;
var _default = SyslogDecoder;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zeXNsb2cvdHJhbnNmb3JtZXIvc3lzbG9nLWRlY29kZXIuanMiXSwibmFtZXMiOlsiTkVXX0xJTkVfQ09ERSIsIk5VTExfREVMSU1FVEVSX0NPREUiLCJTeXNsb2dEZWNvZGVyIiwiU3RyZWFtIiwiVHJhbnNmb3JtIiwiY29uc3RydWN0b3IiLCJidWZmZXJMZW5ndGgiLCJvYmplY3RNb2RlIiwiYnVmZmVySW5kZXgiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsIl90cmFuc2Zvcm0iLCJkYXRhIiwiZW5jb2RpbmciLCJvbkRhdGEiLCJfZGVjb2RlIiwiaSIsImxlbmd0aCIsInN0cmluZ0J1ZmZlciIsImNvcHkiLCJwdXNoIiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsYUFBYSxHQUFHLElBQXRCO0FBQ0EsTUFBTUMsbUJBQW1CLEdBQUcsSUFBNUI7O0FBRUEsTUFBTUMsYUFBTixTQUE0QkMsZ0JBQU9DLFNBQW5DLENBQTZDO0FBRTNDQyxFQUFBQSxXQUFXLENBQUVDLFlBQUYsRUFBZ0I7QUFDekIsVUFBTTtBQUFFQyxNQUFBQSxVQUFVLEVBQUU7QUFBZCxLQUFOO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQixDQUFuQjtBQUNBLFNBQUtDLE1BQUwsR0FBY0MsTUFBTSxDQUFDQyxXQUFQLENBQW1CTCxZQUFuQixDQUFkO0FBQ0Q7O0FBRURNLEVBQUFBLFVBQVUsQ0FBRUMsSUFBRixFQUFRQyxRQUFSLEVBQWtCQyxNQUFsQixFQUEwQjtBQUNsQyxTQUFLQyxPQUFMLENBQWFILElBQWI7O0FBQ0FFLElBQUFBLE1BQU07QUFDUDs7QUFFREMsRUFBQUEsT0FBTyxDQUFFSCxJQUFGLEVBQVE7QUFDYixTQUFLLElBQUlJLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdKLElBQUksQ0FBQ0ssTUFBekIsRUFBaUNELENBQUMsRUFBbEMsRUFBc0M7QUFFcEMsVUFBSUosSUFBSSxDQUFDSSxDQUFELENBQUosS0FBWWhCLG1CQUFoQixFQUFxQztBQUNuQztBQUNEOztBQUVELFVBQUlZLElBQUksQ0FBQ0ksQ0FBRCxDQUFKLEtBQVlqQixhQUFoQixFQUErQjtBQUM3QixZQUFJLEtBQUtRLFdBQUwsS0FBcUIsQ0FBekIsRUFBNEI7QUFDMUIsZ0JBQU1XLFlBQVksR0FBR1QsTUFBTSxDQUFDQyxXQUFQLENBQW1CLEtBQUtILFdBQXhCLENBQXJCO0FBQ0EsZUFBS0MsTUFBTCxDQUFZVyxJQUFaLENBQWlCRCxZQUFqQixFQUErQixDQUEvQixFQUFrQyxDQUFsQyxFQUFxQyxLQUFLWCxXQUExQztBQUNBLGVBQUthLElBQUwsQ0FBVUYsWUFBWSxDQUFDRyxRQUFiLENBQXNCLE1BQXRCLENBQVYsRUFBeUMsTUFBekM7QUFDQSxlQUFLZCxXQUFMLEdBQW1CLENBQW5CO0FBQ0Q7O0FBQ0Q7QUFDRDs7QUFDRCxXQUFLQyxNQUFMLENBQVksS0FBS0QsV0FBakIsSUFBZ0NLLElBQUksQ0FBQ0ksQ0FBRCxDQUFwQztBQUNBLFdBQUtULFdBQUw7QUFDRDtBQUNGOztBQWhDMEM7OztlQW9DOUJOLGEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RyZWFtIGZyb20gJ3N0cmVhbSc7XG5cbmNvbnN0IE5FV19MSU5FX0NPREUgPSAweDBBO1xuY29uc3QgTlVMTF9ERUxJTUVURVJfQ09ERSA9IDB4MDA7XG5cbmNsYXNzIFN5c2xvZ0RlY29kZXIgZXh0ZW5kcyBTdHJlYW0uVHJhbnNmb3JtIHtcblxuICBjb25zdHJ1Y3RvciAoYnVmZmVyTGVuZ3RoKSB7XG4gICAgc3VwZXIoeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICAgIHRoaXMuYnVmZmVySW5kZXggPSAwO1xuICAgIHRoaXMuYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGJ1ZmZlckxlbmd0aCk7XG4gIH1cblxuICBfdHJhbnNmb3JtIChkYXRhLCBlbmNvZGluZywgb25EYXRhKSB7XG4gICAgdGhpcy5fZGVjb2RlKGRhdGEpO1xuICAgIG9uRGF0YSgpO1xuICB9XG5cbiAgX2RlY29kZSAoZGF0YSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gRG9uJ3Qgc3RvcmUgdGhlIG51bGwgZGVsaW1ldGVyIG1lc3NhZ2VzXG4gICAgICBpZiAoZGF0YVtpXSA9PT0gTlVMTF9ERUxJTUVURVJfQ09ERSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIC8vIFB1c2ggdGhlIGRhdGEgd2hlbiBuZXcgbGluZSBpcyBzZW50XG4gICAgICBpZiAoZGF0YVtpXSA9PT0gTkVXX0xJTkVfQ09ERSkge1xuICAgICAgICBpZiAodGhpcy5idWZmZXJJbmRleCAhPT0gMCkge1xuICAgICAgICAgIGNvbnN0IHN0cmluZ0J1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSh0aGlzLmJ1ZmZlckluZGV4KTtcbiAgICAgICAgICB0aGlzLmJ1ZmZlci5jb3B5KHN0cmluZ0J1ZmZlciwgMCwgMCwgdGhpcy5idWZmZXJJbmRleCk7XG4gICAgICAgICAgdGhpcy5wdXNoKHN0cmluZ0J1ZmZlci50b1N0cmluZygndXRmOCcpLCAndXRmOCcpO1xuICAgICAgICAgIHRoaXMuYnVmZmVySW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgdGhpcy5idWZmZXJbdGhpcy5idWZmZXJJbmRleF0gPSBkYXRhW2ldO1xuICAgICAgdGhpcy5idWZmZXJJbmRleCsrO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBTeXNsb2dEZWNvZGVyIH07XG5leHBvcnQgZGVmYXVsdCBTeXNsb2dEZWNvZGVyO1xuIl0sImZpbGUiOiJsaWIvc3lzbG9nL3RyYW5zZm9ybWVyL3N5c2xvZy1kZWNvZGVyLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
