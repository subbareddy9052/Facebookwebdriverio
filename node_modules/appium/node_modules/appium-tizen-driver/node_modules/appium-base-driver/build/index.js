"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_WS_PATHNAME_PREFIX = exports.isStandardCap = exports.processCapabilities = exports.getSummaryByCode = exports.statusCodes = exports.JWProxy = exports.server = exports.STATIC_DIR = exports.isSessionCommand = exports.NO_SESSION_ID_COMMANDS = exports.routeToCommandName = exports.METHOD_MAP = exports.ALL_COMMANDS = exports.errorFromW3CJsonCode = exports.errorFromCode = exports.errorFromMJSONWPStatusCode = exports.isErrorType = exports.errors = exports.routeConfiguringFunction = exports.Protocol = exports.default = exports.BASEDRIVER_HANDLED_SETTINGS = exports.ImageElement = exports.DeviceSettings = exports.BaseDriver = void 0;

require("source-map-support/register");

var driver = _interopRequireWildcard(require("./lib/basedriver/driver"));

var image = _interopRequireWildcard(require("./lib/basedriver/image-element"));

var deviceSettings = _interopRequireWildcard(require("./lib/basedriver/device-settings"));

var protocol = _interopRequireWildcard(require("./lib/protocol"));

var staticIndex = _interopRequireWildcard(require("./lib/express/static"));

var serverIndex = _interopRequireWildcard(require("./lib/express/server"));

var proxyIndex = _interopRequireWildcard(require("./lib/jsonwp-proxy/proxy"));

var statusIndex = _interopRequireWildcard(require("./lib/jsonwp-status/status"));

var caps = _interopRequireWildcard(require("./lib/basedriver/capabilities"));

var ws = _interopRequireWildcard(require("./lib/express/websocket"));

const {
  BaseDriver
} = driver;
exports.BaseDriver = BaseDriver;
const {
  ImageElement
} = image;
exports.ImageElement = ImageElement;
const {
  DeviceSettings,
  BASEDRIVER_HANDLED_SETTINGS
} = deviceSettings;
exports.BASEDRIVER_HANDLED_SETTINGS = BASEDRIVER_HANDLED_SETTINGS;
exports.DeviceSettings = DeviceSettings;
var _default = BaseDriver;
exports.default = _default;
const {
  Protocol,
  routeConfiguringFunction,
  errors,
  isErrorType,
  errorFromMJSONWPStatusCode,
  errorFromW3CJsonCode,
  ALL_COMMANDS,
  METHOD_MAP,
  routeToCommandName,
  NO_SESSION_ID_COMMANDS,
  isSessionCommand
} = protocol;
exports.isSessionCommand = isSessionCommand;
exports.NO_SESSION_ID_COMMANDS = NO_SESSION_ID_COMMANDS;
exports.routeToCommandName = routeToCommandName;
exports.METHOD_MAP = METHOD_MAP;
exports.ALL_COMMANDS = ALL_COMMANDS;
exports.errorFromW3CJsonCode = errorFromW3CJsonCode;
exports.errorFromCode = exports.errorFromMJSONWPStatusCode = errorFromMJSONWPStatusCode;
exports.isErrorType = isErrorType;
exports.errors = errors;
exports.routeConfiguringFunction = routeConfiguringFunction;
exports.Protocol = Protocol;
const {
  STATIC_DIR
} = staticIndex;
exports.STATIC_DIR = STATIC_DIR;
const {
  server
} = serverIndex;
exports.server = server;
const {
  JWProxy
} = proxyIndex;
exports.JWProxy = JWProxy;
const {
  codes: statusCodes,
  getSummaryByCode
} = statusIndex;
exports.getSummaryByCode = getSummaryByCode;
exports.statusCodes = statusCodes;
const {
  processCapabilities,
  isStandardCap
} = caps;
exports.isStandardCap = isStandardCap;
exports.processCapabilities = processCapabilities;
const {
  DEFAULT_WS_PATHNAME_PREFIX
} = ws;
exports.DEFAULT_WS_PATHNAME_PREFIX = DEFAULT_WS_PATHNAME_PREFIX;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhc2VEcml2ZXIiLCJkcml2ZXIiLCJJbWFnZUVsZW1lbnQiLCJpbWFnZSIsIkRldmljZVNldHRpbmdzIiwiQkFTRURSSVZFUl9IQU5ETEVEX1NFVFRJTkdTIiwiZGV2aWNlU2V0dGluZ3MiLCJQcm90b2NvbCIsInJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiIsImVycm9ycyIsImlzRXJyb3JUeXBlIiwiZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUiLCJlcnJvckZyb21XM0NKc29uQ29kZSIsIkFMTF9DT01NQU5EUyIsIk1FVEhPRF9NQVAiLCJyb3V0ZVRvQ29tbWFuZE5hbWUiLCJOT19TRVNTSU9OX0lEX0NPTU1BTkRTIiwiaXNTZXNzaW9uQ29tbWFuZCIsInByb3RvY29sIiwiU1RBVElDX0RJUiIsInN0YXRpY0luZGV4Iiwic2VydmVyIiwic2VydmVySW5kZXgiLCJKV1Byb3h5IiwicHJveHlJbmRleCIsImNvZGVzIiwic3RhdHVzQ29kZXMiLCJnZXRTdW1tYXJ5QnlDb2RlIiwic3RhdHVzSW5kZXgiLCJwcm9jZXNzQ2FwYWJpbGl0aWVzIiwiaXNTdGFuZGFyZENhcCIsImNhcHMiLCJERUZBVUxUX1dTX1BBVEhOQU1FX1BSRUZJWCIsIndzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQVdBOztBQWVBOztBQUlBOztBQUtBOztBQUtBOztBQUtBOztBQUtBOztBQWhEQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBaUJDLE1BQXZCOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFtQkMsS0FBekI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxjQUFGO0FBQWtCQyxFQUFBQTtBQUFsQixJQUFrREMsY0FBeEQ7OztlQUdlTixVOztBQU1mLE1BQU07QUFDSk8sRUFBQUEsUUFESTtBQUNNQyxFQUFBQSx3QkFETjtBQUNnQ0MsRUFBQUEsTUFEaEM7QUFDd0NDLEVBQUFBLFdBRHhDO0FBRUpDLEVBQUFBLDBCQUZJO0FBRXdCQyxFQUFBQSxvQkFGeEI7QUFFOENDLEVBQUFBLFlBRjlDO0FBRTREQyxFQUFBQSxVQUY1RDtBQUdKQyxFQUFBQSxrQkFISTtBQUdnQkMsRUFBQUEsc0JBSGhCO0FBR3dDQyxFQUFBQTtBQUh4QyxJQUlGQyxRQUpKOzs7Ozs7Ozs7Ozs7QUFjQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBaUJDLFdBQXZCOztBQUlBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFhQyxXQUFuQjs7QUFLQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBY0MsVUFBcEI7O0FBS0EsTUFBTTtBQUFFQyxFQUFBQSxLQUFLLEVBQUVDLFdBQVQ7QUFBc0JDLEVBQUFBO0FBQXRCLElBQTJDQyxXQUFqRDs7O0FBS0EsTUFBTTtBQUFFQyxFQUFBQSxtQkFBRjtBQUF1QkMsRUFBQUE7QUFBdkIsSUFBeUNDLElBQS9DOzs7QUFLQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBaUNDLEVBQXZDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1haW5cblxuLy8gQmFzZURyaXZlciBleHBvcnRzXG5pbXBvcnQgKiBhcyBkcml2ZXIgZnJvbSAnLi9saWIvYmFzZWRyaXZlci9kcml2ZXInO1xuaW1wb3J0ICogYXMgaW1hZ2UgZnJvbSAnLi9saWIvYmFzZWRyaXZlci9pbWFnZS1lbGVtZW50JztcbmltcG9ydCAqIGFzIGRldmljZVNldHRpbmdzIGZyb20gJy4vbGliL2Jhc2Vkcml2ZXIvZGV2aWNlLXNldHRpbmdzJztcblxuY29uc3QgeyBCYXNlRHJpdmVyIH0gPSBkcml2ZXI7XG5jb25zdCB7IEltYWdlRWxlbWVudCB9ID0gaW1hZ2U7XG5jb25zdCB7IERldmljZVNldHRpbmdzLCBCQVNFRFJJVkVSX0hBTkRMRURfU0VUVElOR1MgfSA9IGRldmljZVNldHRpbmdzO1xuXG5leHBvcnQgeyBCYXNlRHJpdmVyLCBEZXZpY2VTZXR0aW5ncywgSW1hZ2VFbGVtZW50LCBCQVNFRFJJVkVSX0hBTkRMRURfU0VUVElOR1MgfTtcbmV4cG9ydCBkZWZhdWx0IEJhc2VEcml2ZXI7XG5cblxuLy8gTUpTT05XUCBleHBvcnRzXG5pbXBvcnQgKiBhcyBwcm90b2NvbCBmcm9tICcuL2xpYi9wcm90b2NvbCc7XG5cbmNvbnN0IHtcbiAgUHJvdG9jb2wsIHJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiwgZXJyb3JzLCBpc0Vycm9yVHlwZSxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUsIGVycm9yRnJvbVczQ0pzb25Db2RlLCBBTExfQ09NTUFORFMsIE1FVEhPRF9NQVAsXG4gIHJvdXRlVG9Db21tYW5kTmFtZSwgTk9fU0VTU0lPTl9JRF9DT01NQU5EUywgaXNTZXNzaW9uQ29tbWFuZCxcbn0gPSBwcm90b2NvbDtcblxuZXhwb3J0IHtcbiAgUHJvdG9jb2wsIHJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiwgZXJyb3JzLCBpc0Vycm9yVHlwZSxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUsIGVycm9yRnJvbVczQ0pzb25Db2RlLFxuICBlcnJvckZyb21NSlNPTldQU3RhdHVzQ29kZSBhcyBlcnJvckZyb21Db2RlLCBBTExfQ09NTUFORFMsIE1FVEhPRF9NQVAsXG4gIHJvdXRlVG9Db21tYW5kTmFtZSwgTk9fU0VTU0lPTl9JRF9DT01NQU5EUywgaXNTZXNzaW9uQ29tbWFuZCB9O1xuXG4vLyBFeHByZXNzIGV4cG9ydHNcbmltcG9ydCAqIGFzIHN0YXRpY0luZGV4IGZyb20gJy4vbGliL2V4cHJlc3Mvc3RhdGljJztcbmNvbnN0IHsgU1RBVElDX0RJUiB9ID0gc3RhdGljSW5kZXg7XG5leHBvcnQgeyBTVEFUSUNfRElSIH07XG5cbmltcG9ydCAqIGFzIHNlcnZlckluZGV4IGZyb20gJy4vbGliL2V4cHJlc3Mvc2VydmVyJztcbmNvbnN0IHsgc2VydmVyIH0gPSBzZXJ2ZXJJbmRleDtcbmV4cG9ydCB7IHNlcnZlciB9O1xuXG4vLyBqc29ud3AtcHJveHkgZXhwb3J0c1xuaW1wb3J0ICogYXMgcHJveHlJbmRleCBmcm9tICcuL2xpYi9qc29ud3AtcHJveHkvcHJveHknO1xuY29uc3QgeyBKV1Byb3h5IH0gPSBwcm94eUluZGV4O1xuZXhwb3J0IHsgSldQcm94eSB9O1xuXG4vLyBqc29ud3Atc3RhdHVzIGV4cG9ydHNcbmltcG9ydCAqIGFzIHN0YXR1c0luZGV4IGZyb20gJy4vbGliL2pzb253cC1zdGF0dXMvc3RhdHVzJztcbmNvbnN0IHsgY29kZXM6IHN0YXR1c0NvZGVzLCBnZXRTdW1tYXJ5QnlDb2RlIH0gPSBzdGF0dXNJbmRleDtcbmV4cG9ydCB7IHN0YXR1c0NvZGVzLCBnZXRTdW1tYXJ5QnlDb2RlIH07XG5cbi8vIFczQyBjYXBhYmlsaXRpZXMgcGFyc2VyXG5pbXBvcnQgKiBhcyBjYXBzIGZyb20gJy4vbGliL2Jhc2Vkcml2ZXIvY2FwYWJpbGl0aWVzJztcbmNvbnN0IHsgcHJvY2Vzc0NhcGFiaWxpdGllcywgaXNTdGFuZGFyZENhcCB9ID0gY2FwcztcbmV4cG9ydCB7IHByb2Nlc3NDYXBhYmlsaXRpZXMsIGlzU3RhbmRhcmRDYXAgfTtcblxuLy8gV2ViIHNvY2tldCBoZWxwZXJzXG5pbXBvcnQgKiBhcyB3cyBmcm9tICcuL2xpYi9leHByZXNzL3dlYnNvY2tldCc7XG5jb25zdCB7IERFRkFVTFRfV1NfUEFUSE5BTUVfUFJFRklYIH0gPSB3cztcbmV4cG9ydCB7IERFRkFVTFRfV1NfUEFUSE5BTUVfUFJFRklYIH07XG4iXSwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii4uIn0=
