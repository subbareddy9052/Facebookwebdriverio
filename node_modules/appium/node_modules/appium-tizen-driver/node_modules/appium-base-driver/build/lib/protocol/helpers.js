"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatResponseValue = formatResponseValue;
exports.formatStatus = formatStatus;
exports.JSONWP_SUCCESS_STATUS_CODE = exports.W3C_ELEMENT_KEY = exports.MJSONWP_ELEMENT_KEY = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _helpers = require("../basedriver/helpers");

var _driver = _interopRequireDefault(require("../basedriver/driver"));

const MJSONWP_ELEMENT_KEY = 'ELEMENT';
exports.MJSONWP_ELEMENT_KEY = MJSONWP_ELEMENT_KEY;
const W3C_ELEMENT_KEY = 'element-6066-11e4-a52e-4f735466cecf';
exports.W3C_ELEMENT_KEY = W3C_ELEMENT_KEY;
const JSONWP_SUCCESS_STATUS_CODE = 0;
exports.JSONWP_SUCCESS_STATUS_CODE = JSONWP_SUCCESS_STATUS_CODE;

function formatResponseValue(resValue) {
  if (_lodash.default.isUndefined(resValue)) {
    return null;
  }

  return (0, _helpers.duplicateKeys)(resValue, MJSONWP_ELEMENT_KEY, W3C_ELEMENT_KEY);
}

function formatStatus(responseBody, protocol = null) {
  if (!_lodash.default.isPlainObject(responseBody) || !protocol) {
    return responseBody;
  }

  if (protocol === _driver.default.DRIVER_PROTOCOL.MJSONWP && !_lodash.default.isInteger(responseBody.status)) {
    responseBody.status = JSONWP_SUCCESS_STATUS_CODE;
  }

  if (protocol === _driver.default.DRIVER_PROTOCOL.W3C && !_lodash.default.isUndefined(responseBody.status)) {
    delete responseBody.status;
  }

  return responseBody;
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wcm90b2NvbC9oZWxwZXJzLmpzIl0sIm5hbWVzIjpbIk1KU09OV1BfRUxFTUVOVF9LRVkiLCJXM0NfRUxFTUVOVF9LRVkiLCJKU09OV1BfU1VDQ0VTU19TVEFUVVNfQ09ERSIsImZvcm1hdFJlc3BvbnNlVmFsdWUiLCJyZXNWYWx1ZSIsIl8iLCJpc1VuZGVmaW5lZCIsImZvcm1hdFN0YXR1cyIsInJlc3BvbnNlQm9keSIsInByb3RvY29sIiwiaXNQbGFpbk9iamVjdCIsIkJhc2VEcml2ZXIiLCJEUklWRVJfUFJPVE9DT0wiLCJNSlNPTldQIiwiaXNJbnRlZ2VyIiwic3RhdHVzIiwiVzNDIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0EsTUFBTUEsbUJBQW1CLEdBQUcsU0FBNUI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHLHFDQUF4Qjs7QUFDQSxNQUFNQywwQkFBMEIsR0FBRyxDQUFuQzs7O0FBV0EsU0FBU0MsbUJBQVQsQ0FBOEJDLFFBQTlCLEVBQXdDO0FBQ3RDLE1BQUlDLGdCQUFFQyxXQUFGLENBQWNGLFFBQWQsQ0FBSixFQUE2QjtBQUUzQixXQUFPLElBQVA7QUFDRDs7QUFHRCxTQUFPLDRCQUFjQSxRQUFkLEVBQXdCSixtQkFBeEIsRUFBNkNDLGVBQTdDLENBQVA7QUFDRDs7QUFZRCxTQUFTTSxZQUFULENBQXVCQyxZQUF2QixFQUFxQ0MsUUFBUSxHQUFHLElBQWhELEVBQXNEO0FBQ3BELE1BQUksQ0FBQ0osZ0JBQUVLLGFBQUYsQ0FBZ0JGLFlBQWhCLENBQUQsSUFBa0MsQ0FBQ0MsUUFBdkMsRUFBaUQ7QUFDL0MsV0FBT0QsWUFBUDtBQUNEOztBQUNELE1BQUlDLFFBQVEsS0FBS0UsZ0JBQVdDLGVBQVgsQ0FBMkJDLE9BQXhDLElBQW1ELENBQUNSLGdCQUFFUyxTQUFGLENBQVlOLFlBQVksQ0FBQ08sTUFBekIsQ0FBeEQsRUFBMEY7QUFFeEZQLElBQUFBLFlBQVksQ0FBQ08sTUFBYixHQUFzQmIsMEJBQXRCO0FBQ0Q7O0FBQ0QsTUFBSU8sUUFBUSxLQUFLRSxnQkFBV0MsZUFBWCxDQUEyQkksR0FBeEMsSUFBK0MsQ0FBQ1gsZ0JBQUVDLFdBQUYsQ0FBY0UsWUFBWSxDQUFDTyxNQUEzQixDQUFwRCxFQUF3RjtBQUN0RixXQUFPUCxZQUFZLENBQUNPLE1BQXBCO0FBQ0Q7O0FBQ0QsU0FBT1AsWUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGR1cGxpY2F0ZUtleXMgfSBmcm9tICcuLi9iYXNlZHJpdmVyL2hlbHBlcnMnO1xuaW1wb3J0IEJhc2VEcml2ZXIgZnJvbSAnLi4vYmFzZWRyaXZlci9kcml2ZXInO1xuXG5cbmNvbnN0IE1KU09OV1BfRUxFTUVOVF9LRVkgPSAnRUxFTUVOVCc7XG5jb25zdCBXM0NfRUxFTUVOVF9LRVkgPSAnZWxlbWVudC02MDY2LTExZTQtYTUyZS00ZjczNTQ2NmNlY2YnO1xuY29uc3QgSlNPTldQX1NVQ0NFU1NfU1RBVFVTX0NPREUgPSAwO1xuXG4vKipcbiAqIFByZXByb2Nlc3NlcyB0aGUgcmVzdWx0aW5nIHZhbHVlIGZvciBBUEkgcmVzcG9uc2VzLFxuICogc28gdGhleSBoYXZlIGtleXMgZm9yIGJvdGggVzNDIGFuZCBKU09OV1AgcHJvdG9jb2xzLlxuICogVGhlIGFyZ3VtZW50IHZhbHVlIGlzIE5PVCBtdXRhdGVkXG4gKlxuICogQHBhcmFtIHs/T2JqZWN0fSByZXNWYWx1ZSBUaGUgYWN0dWFsIHJlc3BvbnNlIHZhbHVlXG4gKiBAcmV0dXJucyB7P09iamVjdH0gRWl0aGVyIG1vZGlmaWVkIHZhbHVlIG9yIHRoZSBzYW1lIG9uZSBpZlxuICogbm90aGluZyBoYXMgYmVlbiBtb2RpZmllZFxuICovXG5mdW5jdGlvbiBmb3JtYXRSZXNwb25zZVZhbHVlIChyZXNWYWx1ZSkge1xuICBpZiAoXy5pc1VuZGVmaW5lZChyZXNWYWx1ZSkpIHtcbiAgICAvLyBjb252ZXJ0IHVuZGVmaW5lZCB0byBudWxsXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgLy8gSWYgdGhlIE1KU09OV1AgZWxlbWVudCBrZXkgZm9ybWF0IChFTEVNRU5UKSB3YXMgcHJvdmlkZWQsIGFkZCBhIGR1cGxpY2F0ZSBrZXkgKGVsZW1lbnQtNjA2Ni0xMWU0LWE1MmUtNGY3MzU0NjZjZWNmKVxuICAvLyBJZiB0aGUgVzNDIGVsZW1lbnQga2V5IGZvcm1hdCAoZWxlbWVudC02MDY2LTExZTQtYTUyZS00ZjczNTQ2NmNlY2YpIHdhcyBwcm92aWRlZCwgYWRkIGEgZHVwbGljYXRlIGtleSAoRUxFTUVOVClcbiAgcmV0dXJuIGR1cGxpY2F0ZUtleXMocmVzVmFsdWUsIE1KU09OV1BfRUxFTUVOVF9LRVksIFczQ19FTEVNRU5UX0tFWSk7XG59XG5cbi8qKlxuICogUHJvcGVybHkgZm9ybWF0cyB0aGUgc3RhdHVzIGZvciBBUEkgcmVzcG9uc2VzLFxuICogc28gdGhleSBhcmUgY29ycmVjdCBmb3IgYm90aCBXM0MgYW5kIEpTT05XUCBwcm90b2NvbHMuXG4gKiBUaGlzIG1ldGhvZCBET0VTIG11dGF0ZSB0aGUgYHJlc3BvbnNlQm9keWAgYXJndW1lbnQgaWYgbmVlZGVkXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlc3BvbnNlQm9keVxuICogQHBhcmFtIHs/c3RyaW5nfSBwcm90b2NvbCBUaGUgbmFtZSBvZiB0aGUgcHJvdG9jb2wsIGVpdGhlclxuICogYEJhc2VEcml2ZXIuRFJJVkVSX1BST1RPQ09MLlczQ2Agb3IgYEJhc2VEcml2ZXIuRFJJVkVSX1BST1RPQ09MLk1KU09OV1BgXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZml4ZWQgcmVzcG9uc2UgYm9keVxuICovXG5mdW5jdGlvbiBmb3JtYXRTdGF0dXMgKHJlc3BvbnNlQm9keSwgcHJvdG9jb2wgPSBudWxsKSB7XG4gIGlmICghXy5pc1BsYWluT2JqZWN0KHJlc3BvbnNlQm9keSkgfHwgIXByb3RvY29sKSB7XG4gICAgcmV0dXJuIHJlc3BvbnNlQm9keTtcbiAgfVxuICBpZiAocHJvdG9jb2wgPT09IEJhc2VEcml2ZXIuRFJJVkVSX1BST1RPQ09MLk1KU09OV1AgJiYgIV8uaXNJbnRlZ2VyKHJlc3BvbnNlQm9keS5zdGF0dXMpKSB7XG4gICAgLy8gUmVzcG9uc2Ugc3RhdHVzIHNob3VsZCBiZSB0aGUgc3RhdHVzIHNldCBieSB0aGUgZHJpdmVyIHJlc3BvbnNlLlxuICAgIHJlc3BvbnNlQm9keS5zdGF0dXMgPSBKU09OV1BfU1VDQ0VTU19TVEFUVVNfQ09ERTtcbiAgfVxuICBpZiAocHJvdG9jb2wgPT09IEJhc2VEcml2ZXIuRFJJVkVSX1BST1RPQ09MLlczQyAmJiAhXy5pc1VuZGVmaW5lZChyZXNwb25zZUJvZHkuc3RhdHVzKSkge1xuICAgIGRlbGV0ZSByZXNwb25zZUJvZHkuc3RhdHVzO1xuICB9XG4gIHJldHVybiByZXNwb25zZUJvZHk7XG59XG5cblxuZXhwb3J0IHtcbiAgTUpTT05XUF9FTEVNRU5UX0tFWSwgVzNDX0VMRU1FTlRfS0VZLCBmb3JtYXRSZXNwb25zZVZhbHVlLFxuICBKU09OV1BfU1VDQ0VTU19TVEFUVVNfQ09ERSwgZm9ybWF0U3RhdHVzLFxufTtcbiJdLCJmaWxlIjoibGliL3Byb3RvY29sL2hlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
